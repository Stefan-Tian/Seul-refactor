type Query {
  projects: [Project!]
  tasks: [Task!]
  project(id: ID!): Project
  task(id: ID!): Task
  currentUser: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User
  login(email: String!, password: String!): User
  createTask(
    title: String!
    status: Int
    priority: Int
    startDate: String
    endDate: String
    projectId: String!
  ): Task
  updateTask(
    id: ID!
    title: String
    priority: Int
    status: Int
    startDate: String
    endDate: String
  ): Task
  deleteTask(id: ID!): Task
  createProject(title: String!): Project
  updateProject(id: ID!, title: String!): Project
  deleteProject(id: ID!): Project
  createMessage(text: String!, taskId: String!): Message
  updateMessage(id: ID!, text: String!): Message
  deleteMessage(id: ID!): Message
  logout: String
}

type User {
  id: ID!
  name: String!
  email: String!
  projects: [Project!]
  tasks: [Task!]
  messages: [Message!]
}

type Project {
  id: ID!
  title: String
  tasks: [Task!]
  createdBy: User
}

type Task {
  id: ID!
  inProject: Project
  title: String
  priority: Int
  status: Int
  createdBy: User
  startDate: String
  endDate: String
  messages: [Message!]
}

type Message {
  id: ID!
  text: String!
  inTask: Task
  createdBy: User
}
